// 数据库i18n方案二：关联表方式
// 适用于多语言场景，更灵活但查询复杂度更高

// 语言表
model Language {
  id    String @id @default(cuid())
  code  String @unique // 'zh', 'en', 'ja'
  name  String         // '中文', 'English', '日本語'
  
  storeTranslations     StoreTranslation[]
  vehicleTranslations   VehicleTranslation[]
  newsTranslations      NewsTranslation[]
  packageTranslations   PackageTranslation[]
  notificationTranslations NotificationTranslation[]
  
  @@map("languages")
}

// 店面表（基础信息）
model Store {
  id          String   @id @default(cuid())
  
  // 非多语言字段
  address     String
  city        String
  state       String?
  zipCode     String?
  phone       String
  email       String?
  image       String?
  googleMap   String?
  latitude    Float?
  longitude   Float?
  openingHours Json?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 关联关系
  translations StoreTranslation[]
  vehicles    Vehicle[]
  orders      Order[]
  
  @@map("stores")
}

// 店面翻译表
model StoreTranslation {
  id          String @id @default(cuid())
  storeId     String
  languageId  String
  
  name        String
  description String?
  
  store       Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
  language    Language @relation(fields: [languageId], references: [id], onDelete: Cascade)
  
  @@unique([storeId, languageId])
  @@map("store_translations")
}

// 车辆表（基础信息）
model Vehicle {
  id           String           @id @default(cuid())
  
  // 非多语言字段
  brand        String
  model        String
  year         Int
  seats        Int
  pricePerDay  Float
  images       String[]
  color        String?
  plateNumber  String?        @unique
  isAvailable  Boolean        @default(true)
  storeId      String
  store        Store          @relation(fields: [storeId], references: [id], onDelete: Cascade)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  
  // 关联关系
  translations VehicleTranslation[]
  orders       Order[]
  reviews      Review[]
  
  @@map("vehicles")
}

// 车辆翻译表
model VehicleTranslation {
  id          String @id @default(cuid())
  vehicleId   String
  languageId  String
  
  name                String
  description         String?
  internalDescription String?
  
  vehicle     Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  language    Language @relation(fields: [languageId], references: [id], onDelete: Cascade)
  
  @@unique([vehicleId, languageId])
  @@map("vehicle_translations")
}

// 新闻表（基础信息）
model News {
  id          String   @id @default(cuid())
  
  // 非多语言字段
  image       String?
  author      String?
  category    String?
  tags        String[]
  isPublished Boolean  @default(false)
  publishedAt DateTime?
  slug        String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 关联关系
  translations NewsTranslation[]
  
  @@map("news")
}

// 新闻翻译表
model NewsTranslation {
  id          String @id @default(cuid())
  newsId      String
  languageId  String
  
  title           String
  content         String
  summary         String?
  metaTitle       String?
  metaDescription String?
  
  news        News     @relation(fields: [newsId], references: [id], onDelete: Cascade)
  language    Language @relation(fields: [languageId], references: [id], onDelete: Cascade)
  
  @@unique([newsId, languageId])
  @@map("news_translations")
}

// 套餐表（基础信息）
model Package {
  id          String   @id @default(cuid())
  
  // 非多语言字段
  images      String[]
  price       Float
  stock       Int      @default(0)
  isActive    Boolean  @default(true)
  isFeatured  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 关联关系
  translations PackageTranslation[]
  orders      Order[]
  packageReviews PackageReview[]
  
  @@map("packages")
}

// 套餐翻译表
model PackageTranslation {
  id          String @id @default(cuid())
  packageId   String
  languageId  String
  
  name        String
  description String?
  content     String? @db.Text
  
  package     Package  @relation(fields: [packageId], references: [id], onDelete: Cascade)
  language    Language @relation(fields: [languageId], references: [id], onDelete: Cascade)
  
  @@unique([packageId, languageId])
  @@map("package_translations")
}

// 通知表（基础信息）
model Notification {
  id              String           @id @default(cuid())
  userId          String
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  type            NotificationType
  isRead          Boolean          @default(false)
  readAt          DateTime?
  relatedOrderId  String?
  relatedOrder    Order?           @relation(fields: [relatedOrderId], references: [id], onDelete: Cascade)
  createdAt       DateTime         @default(now())
  
  // 关联关系
  translations NotificationTranslation[]
  
  @@map("notifications")
}

// 通知翻译表
model NotificationTranslation {
  id             String @id @default(cuid())
  notificationId String
  languageId     String
  
  title          String
  message        String
  
  notification   Notification @relation(fields: [notificationId], references: [id], onDelete: Cascade)
  language       Language     @relation(fields: [languageId], references: [id], onDelete: Cascade)
  
  @@unique([notificationId, languageId])
  @@map("notification_translations")
}