// 数据库i18n方案三：JSON字段方式（推荐）
// 利用PostgreSQL的JSON支持，既灵活又简洁

// 店面表 - JSON多语言版本
model Store {
  id          String   @id @default(cuid())
  
  // JSON多语言字段
  name        Json     // { "zh": "北京店", "en": "Beijing Store", "ja": "北京店" }
  description Json?    // { "zh": "描述", "en": "Description", "ja": "説明" }
  
  // 其他非多语言字段保持不变
  address     String
  city        String
  state       String?
  zipCode     String?
  phone       String
  email       String?
  image       String?
  googleMap   String?
  latitude    Float?
  longitude   Float?
  openingHours Json?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  vehicles    Vehicle[]
  orders      Order[]
  
  @@map("stores")
}

// 车辆表 - JSON多语言版本
model Vehicle {
  id           String           @id @default(cuid())
  
  // JSON多语言字段
  name         Json             // { "zh": "奔驰C200", "en": "Mercedes C200", "ja": "メルセデスC200" }
  description  Json?            // { "zh": "豪华轿车", "en": "Luxury sedan", "ja": "高級セダン" }
  internalDescription Json?     // 内部描述的多语言版本
  
  // 其他字段保持不变
  brand        String
  model        String
  year         Int
  seats        Int
  pricePerDay  Float
  images       String[]
  color        String?
  plateNumber  String?        @unique
  isAvailable  Boolean        @default(true)
  storeId      String
  store        Store          @relation(fields: [storeId], references: [id], onDelete: Cascade)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  
  orders       Order[]
  reviews      Review[]
  
  @@map("vehicles")
}

// 新闻表 - JSON多语言版本
model News {
  id          String   @id @default(cuid())
  
  // JSON多语言字段
  title       Json     // { "zh": "新闻标题", "en": "News Title", "ja": "ニュースタイトル" }
  content     Json     // { "zh": "新闻内容", "en": "News Content", "ja": "ニュース内容" }
  summary     Json?    // { "zh": "摘要", "en": "Summary", "ja": "要約" }
  metaTitle   Json?    // SEO标题的多语言版本
  metaDescription Json? // SEO描述的多语言版本
  
  // 其他字段
  image       String?
  author      String?
  category    String?
  tags        String[]
  isPublished Boolean  @default(false)
  publishedAt DateTime?
  slug        String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("news")
}

// 套餐表 - JSON多语言版本
model Package {
  id          String   @id @default(cuid())
  
  // JSON多语言字段
  name        Json     // { "zh": "豪华套餐", "en": "Luxury Package", "ja": "ラグジュアリーパッケージ" }
  description Json?    // { "zh": "套餐描述", "en": "Package Description", "ja": "パッケージ説明" }
  content     Json?    // { "zh": "详细内容", "en": "Detailed Content", "ja": "詳細内容" }
  
  // 其他字段
  images      String[]
  price       Float
  stock       Int      @default(0)
  isActive    Boolean  @default(true)
  isFeatured  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  orders      Order[]
  packageReviews PackageReview[]
  
  @@map("packages")
}

// 通知表 - JSON多语言版本
model Notification {
  id              String           @id @default(cuid())
  userId          String
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // JSON多语言字段
  title           Json             // { "zh": "通知标题", "en": "Notification Title", "ja": "通知タイトル" }
  message         Json             // { "zh": "通知消息", "en": "Notification Message", "ja": "通知メッセージ" }
  
  type            NotificationType
  isRead          Boolean          @default(false)
  readAt          DateTime?
  relatedOrderId  String?
  relatedOrder    Order?           @relation(fields: [relatedOrderId], references: [id], onDelete: Cascade)
  createdAt       DateTime         @default(now())
  
  @@map("notifications")
}